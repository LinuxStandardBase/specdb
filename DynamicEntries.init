INSERT INTO DynamicEntries VALUES (1,'DT_NULL',31,'Marks end of dynamic section',1,'Included');
INSERT INTO DynamicEntries VALUES (2,'DT_NEEDED',31,'Name of needed library',1,'Included');
INSERT INTO DynamicEntries VALUES (3,'DT_PLTRELSZ',31,'Size in bytes of PLT relocs',1,'Included');
INSERT INTO DynamicEntries VALUES (4,'DT_PLTGOT',33,'On the Intel386 architecture, this entrys d_ptr member gives the address of the first entry in the global offset table.',2,'Included');
INSERT INTO DynamicEntries VALUES (5,'DT_HASH',31,'Address of symbol hash table',1,'Included');
INSERT INTO DynamicEntries VALUES (6,'DT_STRTAB',31,'Address of string table',1,'Included');
INSERT INTO DynamicEntries VALUES (7,'DT_SYMTAB',31,'Address of symbol table',1,'Included');
INSERT INTO DynamicEntries VALUES (8,'DT_RELA',31,'Address of Rela relocs',1,'Included');
INSERT INTO DynamicEntries VALUES (9,'DT_RELASZ',31,'Total size of Rela relocs',1,'Included');
INSERT INTO DynamicEntries VALUES (10,'DT_RELAENT',31,'Size of one Rela reloc',1,'Included');
INSERT INTO DynamicEntries VALUES (11,'DT_STRSZ',31,'Size of string table',1,'Included');
INSERT INTO DynamicEntries VALUES (12,'DT_SYMENT',31,'Size of one symbol table entry',1,'Included');
INSERT INTO DynamicEntries VALUES (13,'DT_INIT',31,'Address of init function',1,'Included');
INSERT INTO DynamicEntries VALUES (14,'DT_FINI',31,'Address of termination function',1,'Included');
INSERT INTO DynamicEntries VALUES (15,'DT_SONAME',31,'Name of shared object',1,'Included');
INSERT INTO DynamicEntries VALUES (16,'DT_RPATH',31,'Library search path',1,'Included');
INSERT INTO DynamicEntries VALUES (17,'DT_SYMBOLIC',31,'Start symbol search here',1,'Included');
INSERT INTO DynamicEntries VALUES (18,'DT_REL',31,'Address of Rel relocs',1,'Included');
INSERT INTO DynamicEntries VALUES (19,'DT_RELSZ',31,'Total size of Rel relocs',1,'Included');
INSERT INTO DynamicEntries VALUES (20,'DT_RELENT',31,'Size of one Rel reloc',1,'Included');
INSERT INTO DynamicEntries VALUES (21,'DT_PLTREL',31,'Type of reloc in PLT',1,'Included');
INSERT INTO DynamicEntries VALUES (22,'DT_DEBUG',31,'For debugging; unspecified',1,'Included');
INSERT INTO DynamicEntries VALUES (23,'DT_TEXTREL',31,'Reloc might modify .text',1,'Included');
INSERT INTO DynamicEntries VALUES (24,'DT_JMPREL',31,'Address of PLT relocs',1,'Included');
INSERT INTO DynamicEntries VALUES (25,'DT_BIND_NOW',31,'Process relocations of object',1,'Included');
INSERT INTO DynamicEntries VALUES (26,'DT_INIT_ARRAY',10,'The address of an array of pointers to initialization functions.',1,'Included');
INSERT INTO DynamicEntries VALUES (27,'DT_FINI_ARRAY',10,'The address of an array of pointers to termination functions.',1,'Included');
INSERT INTO DynamicEntries VALUES (28,'DT_INIT_ARRAYSZ',10,'Size in bytes of DT_INIT_ARRAY',1,'Included');
INSERT INTO DynamicEntries VALUES (29,'DT_FINI_ARRAYSZ',10,'Size in bytes of DT_FINI_ARRAY',1,'Included');
INSERT INTO DynamicEntries VALUES (30,'DT_NUM',10,'Number of dynamic entry tags defined (excepting reserved ranges).',1,'Included');
INSERT INTO DynamicEntries VALUES (31,'DT_LOOS',10,'Values from DT_LOOS through DT_HIOS are reserved for definition by specific operating systems.',1,'Included');
INSERT INTO DynamicEntries VALUES (32,'DT_HIOS',10,'Values from DT_LOOS through DT_HIOS are reserved for definition by specific operating systems.',1,'Included');
INSERT INTO DynamicEntries VALUES (33,'DT_LOPROC',31,'Start of processor-specific',1,'Included');
INSERT INTO DynamicEntries VALUES (34,'DT_HIPROC',31,'End of processor-specific',1,'Included');
INSERT INTO DynamicEntries VALUES (35,'DT_VALRNGLO',10,'Entries which fall between DT_VALRNGHI & DT_VALRNGLO use the Dyn.d_un.d_val field of the Elf*_Dyn structure.',1,'Included');
INSERT INTO DynamicEntries VALUES (36,'DT_POSFLAG_1',10,'Flags for DT_* entries, effecting the following DT_* entry',1,'Excluded');
INSERT INTO DynamicEntries VALUES (37,'DT_SYMINSZ',10,'Size of syminfo table (in bytes)',1,'Included');
INSERT INTO DynamicEntries VALUES (38,'DT_SYMINENT',10,'Entry size of syminfo',1,'Included');
INSERT INTO DynamicEntries VALUES (39,'DT_VALRNGHI',10,'Entries which fall between DT_VALRNGHI & DT_VALRNGLO use the Dyn.d_un.d_val field of the Elf*_Dyn structure.',1,'Included');
INSERT INTO DynamicEntries VALUES (40,'DT_ADDRRNGLO',10,'Values from DT_ADDRRNGLO through DT_ADDRRNGHI are reserved for definition by an archLSB.',1,'Included');
INSERT INTO DynamicEntries VALUES (41,'DT_SYMINFO',10,'Address of the Syminfo table.',1,'Included');
INSERT INTO DynamicEntries VALUES (42,'DT_VERSYM',10,'Address of the table provided by the .gnu.version section.',1,'Included');
INSERT INTO DynamicEntries VALUES (43,'DT_FLAGS_1',10,'State flags, see DF_1_* below',1,'Excluded');
INSERT INTO DynamicEntries VALUES (44,'DT_VERDEF',10,'Address of version definition table',1,'Included');
INSERT INTO DynamicEntries VALUES (45,'DT_VERDEFNUM',10,'Number of version definitions',1,'Included');
INSERT INTO DynamicEntries VALUES (46,'DT_VERNEED',10,'Address of table with needed versions',1,'Included');
INSERT INTO DynamicEntries VALUES (47,'DT_VERNEEDNUM',10,'Number of needed versions',1,'Included');
INSERT INTO DynamicEntries VALUES (48,'DT_AUXILIARY',10,'Shared object to load before self',1,'Included');
INSERT INTO DynamicEntries VALUES (49,'DT_FILTER',10,'Shared object to get values from',1,'Included');
INSERT INTO DynamicEntries VALUES (50,'DT_RELCOUNT',10,'All Elf32_Rel R_*_RELATIVE relocations have been placed into a single block and this entry specifies the number of entries in that block. This permits ld.so.1 to streamline the processing of RELATIVE relocations.',1,'Included');
INSERT INTO DynamicEntries VALUES (51,'DT_ADDRRNGHI',10,'Values from DT_ADDRRNGLO through DT_ADDRRNGHI are reserved for definition by an archLSB.',1,'Included');
