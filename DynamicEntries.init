INSERT INTO DynamicEntries VALUES (1,'DT_NULL','0',31,'Marks end of dynamic section',1,'Included');
INSERT INTO DynamicEntries VALUES (2,'DT_NEEDED','1',31,'Name of needed library',1,'Included');
INSERT INTO DynamicEntries VALUES (3,'DT_PLTRELSZ','2',31,'Size in bytes of PLT relocs',1,'Included');
INSERT INTO DynamicEntries VALUES (4,'DT_PLTGOT','3',33,'On the Intel386 architecture, this entrys d_ptr member gives the address of the first entry in the global offset table.',2,'Included');
INSERT INTO DynamicEntries VALUES (5,'DT_HASH','4',31,'Address of symbol hash table',1,'Included');
INSERT INTO DynamicEntries VALUES (6,'DT_STRTAB','5',31,'Address of string table',1,'Included');
INSERT INTO DynamicEntries VALUES (7,'DT_SYMTAB','6',31,'Address of symbol table',1,'Included');
INSERT INTO DynamicEntries VALUES (8,'DT_RELA','7',31,'Address of Rela relocs',1,'Included');
INSERT INTO DynamicEntries VALUES (9,'DT_RELASZ','8',31,'Total size of Rela relocs',1,'Included');
INSERT INTO DynamicEntries VALUES (10,'DT_RELAENT','9',31,'Size of one Rela reloc',1,'Included');
INSERT INTO DynamicEntries VALUES (11,'DT_STRSZ','10',31,'Size of string table',1,'Included');
INSERT INTO DynamicEntries VALUES (12,'DT_SYMENT','11',31,'Size of one symbol table entry',1,'Included');
INSERT INTO DynamicEntries VALUES (13,'DT_INIT','12',31,'Address of init function',1,'Included');
INSERT INTO DynamicEntries VALUES (14,'DT_FINI','13',31,'Address of termination function',1,'Included');
INSERT INTO DynamicEntries VALUES (15,'DT_SONAME','14',31,'Name of shared object',1,'Included');
INSERT INTO DynamicEntries VALUES (16,'DT_RPATH','15',31,'Library search path',1,'Included');
INSERT INTO DynamicEntries VALUES (17,'DT_SYMBOLIC','16',31,'Start symbol search here',1,'Included');
INSERT INTO DynamicEntries VALUES (18,'DT_REL','17',31,'Address of Rel relocs',1,'Included');
INSERT INTO DynamicEntries VALUES (19,'DT_RELSZ','18',31,'Total size of Rel relocs',1,'Included');
INSERT INTO DynamicEntries VALUES (20,'DT_RELENT','19',31,'Size of one Rel reloc',1,'Included');
INSERT INTO DynamicEntries VALUES (21,'DT_PLTREL','20',31,'Type of reloc in PLT',1,'Included');
INSERT INTO DynamicEntries VALUES (22,'DT_DEBUG','21',31,'For debugging; unspecified',1,'Included');
INSERT INTO DynamicEntries VALUES (23,'DT_TEXTREL','22',31,'Reloc might modify .text',1,'Included');
INSERT INTO DynamicEntries VALUES (24,'DT_JMPREL','23',31,'Address of PLT relocs',1,'Included');
INSERT INTO DynamicEntries VALUES (25,'DT_BIND_NOW','0',31,'Process relocations of object',1,'Included');
INSERT INTO DynamicEntries VALUES (26,'DT_INIT_ARRAY','0',10,'The address of an array of pointers to initialization functions.',1,'Included');
INSERT INTO DynamicEntries VALUES (27,'DT_FINI_ARRAY','0',10,'The address of an array of pointers to termination functions.',1,'Included');
INSERT INTO DynamicEntries VALUES (28,'DT_INIT_ARRAYSZ','0',10,'Size in bytes of DT_INIT_ARRAY',1,'Included');
INSERT INTO DynamicEntries VALUES (29,'DT_FINI_ARRAYSZ','0',10,'Size in bytes of DT_FINI_ARRAY',1,'Included');
INSERT INTO DynamicEntries VALUES (30,'DT_NUM','0',10,'Number of dynamic entry tags defined (excepting reserved ranges).',1,'Included');
INSERT INTO DynamicEntries VALUES (31,'DT_LOOS','0x6000000d',10,'Values from DT_LOOS through DT_HIOS are reserved for definition by specific operating systems.',1,'Included');
INSERT INTO DynamicEntries VALUES (32,'DT_HIOS','0x6ffff000',10,'Values from DT_LOOS through DT_HIOS are reserved for definition by specific operating systems.',1,'Included');
INSERT INTO DynamicEntries VALUES (33,'DT_LOPROC','0x70000000',31,'Start of processor-specific',1,'Included');
INSERT INTO DynamicEntries VALUES (34,'DT_HIPROC','0x7fffffff',31,'End of processor-specific',1,'Included');
INSERT INTO DynamicEntries VALUES (35,'DT_VALRNGLO','0x6ffffd00',10,'Entries which fall between DT_VALRNGHI & DT_VALRNGLO use the Dyn.d_un.d_val field of the Elf*_Dyn structure.',1,'Included');
INSERT INTO DynamicEntries VALUES (36,'DT_POSFLAG_1','0',10,'Flags for DT_* entries, effecting the following DT_* entry',1,'Included');
INSERT INTO DynamicEntries VALUES (37,'DT_SYMINSZ','0x6ffffdfe',10,'Size of syminfo table (in bytes)',1,'Included');
INSERT INTO DynamicEntries VALUES (38,'DT_SYMINENT','0x6ffffdff',10,'Entry size of syminfo',1,'Included');
INSERT INTO DynamicEntries VALUES (39,'DT_VALRNGHI','0x6ffffdff',10,'Entries which fall between DT_VALRNGHI & DT_VALRNGLO use the Dyn.d_un.d_val field of the Elf*_Dyn structure.',1,'Included');
INSERT INTO DynamicEntries VALUES (40,'DT_ADDRRNGLO','0x6ffffe00',10,'Values from DT_ADDRRNGLO through DT_ADDRRNGHI are reserved for definition by an archLSB.',1,'Included');
INSERT INTO DynamicEntries VALUES (41,'DT_SYMINFO','0x6ffffeff',10,'Address of the Syminfo table.',1,'Included');
INSERT INTO DynamicEntries VALUES (42,'DT_VERSYM','0x6ffffff0',10,'Address of the table provided by the .gnu.version section.',1,'Included');
INSERT INTO DynamicEntries VALUES (43,'DT_FLAGS_1','0x6ffffffb',10,'State flags, see DF_1_* below',1,'Excluded');
INSERT INTO DynamicEntries VALUES (44,'DT_VERDEF','0',10,'Address of version definition table',1,'Included');
INSERT INTO DynamicEntries VALUES (45,'DT_VERDEFNUM','0',10,'Number of version definitions',1,'Included');
INSERT INTO DynamicEntries VALUES (46,'DT_VERNEED','0',10,'Address of table with needed versions',1,'Included');
INSERT INTO DynamicEntries VALUES (47,'DT_VERNEEDNUM','0',10,'Number of needed versions',1,'Included');
INSERT INTO DynamicEntries VALUES (48,'DT_AUXILIARY','0x7ffffffd',10,'Shared object to load before self',1,'Included');
INSERT INTO DynamicEntries VALUES (49,'DT_FILTER','0x7fffffff',10,'Shared object to get values from',1,'Included');
INSERT INTO DynamicEntries VALUES (50,'DT_RELCOUNT','0x6ffffffa',10,'All Elf32_Rel R_*_RELATIVE relocations have been placed into a single block and this entry specifies the number of entries in that block. This permits ld.so.1 to streamline the processing of RELATIVE relocations.',1,'Included');
INSERT INTO DynamicEntries VALUES (51,'DT_ADDRRNGHI','0',10,'Values from DT_ADDRRNGLO through DT_ADDRRNGHI are reserved for definition by an archLSB.',1,'Included');
INSERT INTO DynamicEntries VALUES (52,'DT_PLTGOT','3',58,'This entry\'s d_ptr member gives the address of the first byte in the procedure linkage table',3,'Included');
INSERT INTO DynamicEntries VALUES (53,'DT_JMPREL','23',68,'This entry is associated with a table of relocation entries for the procedure linkage table. This entry is mandatory both for executable and shared object files',9,'Included');
INSERT INTO DynamicEntries VALUES (54,'DT_PLTGOT','3',68,'This entry\'s d_ptr member gives the address of the first byte in the procedure linkage table',9,'Included');
INSERT INTO DynamicEntries VALUES (55,'DT_RELACOUNT','0x6ffffff9',10,'The number of relative relocations in .rela.dyn',3,'Included');
INSERT INTO DynamicEntries VALUES (56,'DT_PLTGOT','3',74,'This entry\'s d_ptr member gives the address of the first byte in the procedure linkage table',10,'Included');
INSERT INTO DynamicEntries VALUES (57,'DT_PLTGOT','3',78,'This entry\'s d_ptr member gives the address of the first byte in the procedure linkage table',12,'Included');
INSERT INTO DynamicEntries VALUES (58,'DT_JMPREL','23',74,'This entry is associated with a table of relocation entries for the procedure linkage table. This entry is mandatory both for executable and shared object files',10,'Included');
INSERT INTO DynamicEntries VALUES (59,'DT_JMPREL','23',78,'This entry is associated with a table of relocation entries for the procedure linkage table. This entry is mandatory both for executable and shared object files',12,'Included');
INSERT INTO DynamicEntries VALUES (60,'DT_PLTGOT','3',64,'This entry\'s d_ptr member gives the address of the first byte in the procedure linkage table',6,'Included');
INSERT INTO DynamicEntries VALUES (61,'DT_JMPREL','23',64,'This entry is associated with a table of relocation entries for the procedure linkage table. This entry is mandatory both for executable and shared object files',6,'Included');
INSERT INTO DynamicEntries VALUES (62,'DT_RELACOUNT','0x6ffffff9',10,'The number of relative relocations in .rela.dyn',6,'Included');
INSERT INTO DynamicEntries VALUES (63,'DT_RELACOUNT','0x6ffffff9',10,'The number of relative relocations in .rela.dyn',9,'Included');
INSERT INTO DynamicEntries VALUES (64,'DT_JMPREL','23',68,'This entry is associated with a table of relocation entries for the procedure linkage table. This entry is mandatory both for executable and shared object files',3,'Included');
INSERT INTO DynamicEntries VALUES (65,'DT_PLTGOT','3',74,'This entry\'s d_ptr member gives the address of the first byte in the procedure linkage table',3,'Included');
INSERT INTO DynamicEntries VALUES (66,'DT_RELACOUNT','0x6ffffff9',10,'The number of relative relocations in .rela.dyn',10,'Included');
INSERT INTO DynamicEntries VALUES (67,'DT_RELACOUNT','0x6ffffff9',10,'The number of relative relocations in .rela.dyn',12,'Included');
INSERT INTO DynamicEntries VALUES (68,'DT_PLTGOT','3',80,'This entry\'s d_ptr member gives the address of the first byte in the procedure linkage table',11,'Included');
INSERT INTO DynamicEntries VALUES (69,'DT_JMPREL','23',80,'This entry is associated with a table of relocation entries for the procedure linkage table. This entry is mandatory both for executable and shared object files',11,'Included');
INSERT INTO DynamicEntries VALUES (70,'DT_RELACOUNT','0x6ffffff9',80,'The number of relative relocations in .rela.dyn',11,'Included');
