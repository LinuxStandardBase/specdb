INSERT INTO HeaderGroup VALUES (1,'Default HeaderGroup for GL/gl.h',1,0,0,'Default HeaderGroup for GL/gl.h');
INSERT INTO HeaderGroup VALUES (2,'Default HeaderGroup for GL/glx.h',2,0,0,'Default HeaderGroup for GL/glx.h');
INSERT INTO HeaderGroup VALUES (3,'Default HeaderGroup for glob.h',3,0,0,'Default HeaderGroup for glob.h');
INSERT INTO HeaderGroup VALUES (4,'Default HeaderGroup for grp.h',4,0,0,'Default HeaderGroup for grp.h');
INSERT INTO HeaderGroup VALUES (5,'Default HeaderGroup for X11/Xlib.h',5,0,1,'Default HeaderGroup for X11/Xlib.h');
INSERT INTO HeaderGroup VALUES (6,'Default HeaderGroup for X11/Xcms.h',6,0,1,'Default HeaderGroup for X11/Xcms.h');
INSERT INTO HeaderGroup VALUES (7,'Default HeaderGroup for X11/ICE/ICElib.h',7,10,0,'Default HeaderGroup for X11/ICE/ICElib.h');
INSERT INTO HeaderGroup VALUES (8,'Default HeaderGroup for X11/ICE/ICEutil.h',8,0,0,'Default HeaderGroup for X11/ICE/ICEutil.h');
INSERT INTO HeaderGroup VALUES (9,'Default HeaderGroup for X11/SM/SMlib.h',9,10,0,'Default HeaderGroup for X11/SM/SMlib.h');
INSERT INTO HeaderGroup VALUES (10,'Default HeaderGroup for aio.h',10,0,0,'Default HeaderGroup for aio.h');
INSERT INTO HeaderGroup VALUES (11,'Default HeaderGroup for assert.h',11,0,0,'Default HeaderGroup for assert.h');
INSERT INTO HeaderGroup VALUES (12,'Default HeaderGroup for cpio.h',12,0,0,'Default HeaderGroup for cpio.h');
INSERT INTO HeaderGroup VALUES (13,'Default HeaderGroup for crypt.h',13,0,0,'Default HeaderGroup for crypt.h');
INSERT INTO HeaderGroup VALUES (14,'Default HeaderGroup for ctype.h',14,0,0,'Default HeaderGroup for ctype.h');
INSERT INTO HeaderGroup VALUES (15,'Default HeaderGroup for dirent.h',15,0,0,'Default HeaderGroup for dirent.h');
INSERT INTO HeaderGroup VALUES (16,'Default HeaderGroup for dlfcn.h',16,0,0,'Default HeaderGroup for dlfcn.h');
INSERT INTO HeaderGroup VALUES (17,'Default HeaderGroup for errno.h',17,0,0,'Default HeaderGroup for errno.h');
INSERT INTO HeaderGroup VALUES (18,'Default HeaderGroup for fcntl.h',18,0,0,'Default HeaderGroup for fcntl.h');
INSERT INTO HeaderGroup VALUES (19,'Default HeaderGroup for float.h',19,0,0,'Default HeaderGroup for float.h');
INSERT INTO HeaderGroup VALUES (20,'Default HeaderGroup for fnmatch.h',20,0,0,'Default HeaderGroup for fnmatch.h');
INSERT INTO HeaderGroup VALUES (21,'Default HeaderGroup for ftw.h',21,0,0,'Default HeaderGroup for ftw.h');
INSERT INTO HeaderGroup VALUES (22,'Default HeaderGroup for iconv.h',22,0,0,'Default HeaderGroup for iconv.h');
INSERT INTO HeaderGroup VALUES (23,'Default HeaderGroup for inttypes.h',23,0,0,'Default HeaderGroup for inttypes.h');
INSERT INTO HeaderGroup VALUES (24,'Default HeaderGroup for iso646.h',24,0,0,'Default HeaderGroup for iso646.h');
INSERT INTO HeaderGroup VALUES (25,'Default HeaderGroup for langinfo.h',25,0,0,'Default HeaderGroup for langinfo.h');
INSERT INTO HeaderGroup VALUES (26,'Default HeaderGroup for limits.h',26,0,0,'Default HeaderGroup for limits.h');
INSERT INTO HeaderGroup VALUES (27,'Default HeaderGroup for locale.h',27,0,0,'Default HeaderGroup for locale.h');
INSERT INTO HeaderGroup VALUES (28,'Default HeaderGroup for malloc.h',28,0,0,'Default HeaderGroup for malloc.h');
INSERT INTO HeaderGroup VALUES (29,'Default HeaderGroup for math.h',29,0,1,'Default HeaderGroup for math.h');
INSERT INTO HeaderGroup VALUES (30,'Default HeaderGroup for monetary.h',30,0,0,'Default HeaderGroup for monetary.h');
INSERT INTO HeaderGroup VALUES (31,'Default HeaderGroup for mqueue.h',31,0,0,'Default HeaderGroup for mqueue.h');
INSERT INTO HeaderGroup VALUES (32,'Default HeaderGroup for nl_types.h',32,0,0,'Default HeaderGroup for nl_types.h');
INSERT INTO HeaderGroup VALUES (33,'Default HeaderGroup for pthread.h',33,0,0,'Default HeaderGroup for pthread.h');
INSERT INTO HeaderGroup VALUES (34,'Default HeaderGroup for pwd.h',34,0,0,'Default HeaderGroup for pwd.h');
INSERT INTO HeaderGroup VALUES (35,'Default HeaderGroup for regex.h',35,0,0,'Default HeaderGroup for regex.h');
INSERT INTO HeaderGroup VALUES (36,'Default HeaderGroup for regexp.h',36,0,0,'Default HeaderGroup for regexp.h');
INSERT INTO HeaderGroup VALUES (37,'Default HeaderGroup for sched.h',37,0,0,'Default HeaderGroup for sched.h');
INSERT INTO HeaderGroup VALUES (38,'Default HeaderGroup for search.h',38,0,0,'Default HeaderGroup for search.h');
INSERT INTO HeaderGroup VALUES (39,'Default HeaderGroup for semaphore.h',39,0,0,'Default HeaderGroup for semaphore.h');
INSERT INTO HeaderGroup VALUES (40,'Default HeaderGroup for setjmp.h',40,0,0,'Default HeaderGroup for setjmp.h');
INSERT INTO HeaderGroup VALUES (41,'Default HeaderGroup for signal.h',41,0,1,'Default HeaderGroup for signal.h');
INSERT INTO HeaderGroup VALUES (42,'Default HeaderGroup for stdio.h',42,0,0,'Default HeaderGroup for stdio.h');
INSERT INTO HeaderGroup VALUES (43,'Default HeaderGroup for stdlib.h',43,0,0,'Default HeaderGroup for stdlib.h');
INSERT INTO HeaderGroup VALUES (44,'Default HeaderGroup for string.h',44,0,0,'Default HeaderGroup for string.h');
INSERT INTO HeaderGroup VALUES (45,'Default HeaderGroup for sys/types.h',45,0,0,'Default HeaderGroup for sys/types.h');
INSERT INTO HeaderGroup VALUES (46,'Default HeaderGroup for sys/mmap.h',46,0,0,'Default HeaderGroup for sys/mmap.h');
INSERT INTO HeaderGroup VALUES (47,'Default HeaderGroup for sys/sem.h',47,0,0,'Default HeaderGroup for sys/sem.h');
INSERT INTO HeaderGroup VALUES (48,'Default HeaderGroup for sys/socket.h',48,0,0,'Default HeaderGroup for sys/socket.h');
INSERT INTO HeaderGroup VALUES (49,'Default HeaderGroup for sys/ipc.h',49,0,0,'Default HeaderGroup for sys/ipc.h');
INSERT INTO HeaderGroup VALUES (50,'Default HeaderGroup for sys/msg.h',50,0,0,'Default HeaderGroup for sys/msg.h');
INSERT INTO HeaderGroup VALUES (51,'Default HeaderGroup for sys/shm.h',51,0,0,'Default HeaderGroup for sys/shm.h');
INSERT INTO HeaderGroup VALUES (52,'Default HeaderGroup for sys/stat.h',52,0,0,'Default HeaderGroup for sys/stat.h');
INSERT INTO HeaderGroup VALUES (53,'Default HeaderGroup for sys/times.h',53,0,0,'Default HeaderGroup for sys/times.h');
INSERT INTO HeaderGroup VALUES (54,'Default HeaderGroup for sys/utsname.h',54,0,0,'Default HeaderGroup for sys/utsname.h');
INSERT INTO HeaderGroup VALUES (55,'Default HeaderGroup for sys/wait.h',55,0,0,'Default HeaderGroup for sys/wait.h');
INSERT INTO HeaderGroup VALUES (56,'Default HeaderGroup for sys/mman.h',56,0,0,'Default HeaderGroup for sys/mman.h');
INSERT INTO HeaderGroup VALUES (57,'Default HeaderGroup for sys/resource.h',57,0,0,'Default HeaderGroup for sys/resource.h');
INSERT INTO HeaderGroup VALUES (58,'Default HeaderGroup for tar.h',58,0,1,'Default HeaderGroup for tar.h');
INSERT INTO HeaderGroup VALUES (59,'Default HeaderGroup for termios.h',59,0,0,'Default HeaderGroup for termios.h');
INSERT INTO HeaderGroup VALUES (60,'Default HeaderGroup for time.h',60,0,0,'Default HeaderGroup for time.h');
INSERT INTO HeaderGroup VALUES (61,'Default HeaderGroup for ulimit.h',61,0,0,'Default HeaderGroup for ulimit.h');
INSERT INTO HeaderGroup VALUES (62,'Default HeaderGroup for unistd.h',62,0,0,'Default HeaderGroup for unistd.h');
INSERT INTO HeaderGroup VALUES (63,'Default HeaderGroup for utime.h',63,0,0,'Default HeaderGroup for utime.h');
INSERT INTO HeaderGroup VALUES (64,'Default HeaderGroup for wchar.h',64,0,0,'Default HeaderGroup for wchar.h');
INSERT INTO HeaderGroup VALUES (65,'Default HeaderGroup for wctype.h',65,0,0,'Default HeaderGroup for wctype.h');
INSERT INTO HeaderGroup VALUES (66,'Default HeaderGroup for wordexp.h',66,0,0,'Default HeaderGroup for wordexp.h');
INSERT INTO HeaderGroup VALUES (68,'Default HeaderGroup for X11/X.h',68,0,1,'Default HeaderGroup for X11/X.h');
INSERT INTO HeaderGroup VALUES (69,'Default HeaderGroup for X11/Xutil.h',69,0,0,'Default HeaderGroup for X11/Xutil.h');
INSERT INTO HeaderGroup VALUES (70,'Default HeaderGroup for curses.h',70,0,0,'Default HeaderGroup for curses.h');
INSERT INTO HeaderGroup VALUES (71,'Default HeaderGroup for linux/in.h',71,0,0,'Default HeaderGroup for linux/in.h');
INSERT INTO HeaderGroup VALUES (72,'Default HeaderGroup for linux/in6.h',72,0,0,'Default HeaderGroup for linux/in6.h');
INSERT INTO HeaderGroup VALUES (73,'Default HeaderGroup for linux/x25.h',73,0,0,'Default HeaderGroup for linux/x25.h');
INSERT INTO HeaderGroup VALUES (289,'Default HeaderGroup for X11/extensions/Xdbe.h',86,0,0,'Default HeaderGroup for X11/extensions/Xdbe.h');
INSERT INTO HeaderGroup VALUES (75,'Default HeaderGroup for linux/socket.h',75,0,0,'Default HeaderGroup for linux/socket.h');
INSERT INTO HeaderGroup VALUES (76,'Default HeaderGroup for X11/extensions/dpms.h',76,0,0,'Default HeaderGroup for X11/extensions/dpms.h');
INSERT INTO HeaderGroup VALUES (77,'Default HeaderGroup for X11/extensions/security.h',77,0,0,'Default HeaderGroup for X11/extensions/security.h');
INSERT INTO HeaderGroup VALUES (288,'Default HeaderGroup for X11/extensions/XShm.h',85,0,0,'Default HeaderGroup for X11/extensions/XShm.h');
INSERT INTO HeaderGroup VALUES (79,'Default HeaderGroup for X11/extensions/sync.h',79,0,0,'Default HeaderGroup for X11/extensions/sync.h');
INSERT INTO HeaderGroup VALUES (81,'wchar derived types',64,1,0,'');
INSERT INTO HeaderGroup VALUES (82,'Extension Support',5,2,1,'Extensions need a way to hang private data on some structures.');
INSERT INTO HeaderGroup VALUES (83,'Pixmap Formats',5,3,1,'Data structure for retrieving info about pixmap formats.');
INSERT INTO HeaderGroup VALUES (84,'Graphics Context Values',5,4,1,'Data structure for setting graphics context');
INSERT INTO HeaderGroup VALUES (85,'Graphic Context',5,5,1,' Graphics context.  The contents of this structure are implementation dependent.  A GC should be treated as opaque by application code.');
INSERT INTO HeaderGroup VALUES (86,'Visual Structure',5,6,1,'Visual structure; contains information about colormapping possible.');
INSERT INTO HeaderGroup VALUES (87,'Depth Structure',5,7,1,'Depth structure; contains information for each possible depth.');
INSERT INTO HeaderGroup VALUES (88,'Screen Structure',5,8,1,'Information about the screen.  The contents of this structure are implementation dependent.  A Screen should be treated as opaque by application code.');
INSERT INTO HeaderGroup VALUES (89,'Format Structure',5,9,1,' Format structure; describes ZFormat data the screen will understand.');
INSERT INTO HeaderGroup VALUES (90,'Window Attribute Structures',5,10,1,'Data structure for setting window attributes.');
INSERT INTO HeaderGroup VALUES (91,'Host Address Structure',5,11,1,'Data structure for host setting; getting routines.');
INSERT INTO HeaderGroup VALUES (92,'Image Structures',5,12,1,'Data structure for ');
INSERT INTO HeaderGroup VALUES (93,'XReconfigureWindow structure',5,13,1,'Data structure for XReconfigureWindow');
INSERT INTO HeaderGroup VALUES (94,'Graphics Operations',5,14,1,'Data structures for graphics operations.  On most machines, these are congruent with the wire protocol structures, so reformatting the datacan be avoided on these architectures. ');
INSERT INTO HeaderGroup VALUES (95,'XChangeKeyboardControl Structure',5,15,1,'Data structure for XChangeKeyboardControl');
INSERT INTO HeaderGroup VALUES (96,'XGetKeyboardControl Structure',5,16,1,'Data structure for XGetKeyboardControl');
INSERT INTO HeaderGroup VALUES (97,'XGetMotionEvents Structure',5,17,1,'Data structure for XGetMotionEvents.');
INSERT INTO HeaderGroup VALUES (98,'ModifierMapping Structures',5,18,1,'Data structure for X{Set,Get}ModifierMapping');
INSERT INTO HeaderGroup VALUES (99,'Display Structures',5,19,1,'Display datatype maintaining display specific data. The contents of this structure are implementation dependent.A Display should be treated as opaque by application code. ');
INSERT INTO HeaderGroup VALUES (100,'Event Structures',5,20,1,'Definitions of specific events.');
INSERT INTO HeaderGroup VALUES (101,'Event Union',5,21,1,'this union is defined so Xlib can always use the same sized event structure internally, to avoid memory fragmentation.');
INSERT INTO HeaderGroup VALUES (102,'Font Metric Info',5,22,1,'per character font metric information.');
INSERT INTO HeaderGroup VALUES (103,'Font Property Structures',5,23,1,'To allow arbitrary information with fonts, there are additional properties returned.');
INSERT INTO HeaderGroup VALUES (104,'Poly Text Structures',5,24,1,'PolyText routines take these as arguments.');
INSERT INTO HeaderGroup VALUES (105,'Extension Data Objects',5,25,1,'');
INSERT INTO HeaderGroup VALUES (106,'Output Method/Context',5,26,1,'');
INSERT INTO HeaderGroup VALUES (107,'mb/wc Text Itme Structures',5,27,1,'');
INSERT INTO HeaderGroup VALUES (108,'Output Method Structures',5,28,1,'');
INSERT INTO HeaderGroup VALUES (109,'Input Method/Context',5,29,1,'');
INSERT INTO HeaderGroup VALUES (110,'Resources',68,1,1,'Resources');
INSERT INTO HeaderGroup VALUES (111,'Basic Types',5,1,1,'');
INSERT INTO HeaderGroup VALUES (112,'Derived type',45,1,1,'These types are derived from the ones above');
INSERT INTO HeaderGroup VALUES (113,'linux_types.h',45,3,1,'Stuff really in linux/types.h');
INSERT INTO HeaderGroup VALUES (114,'bits_type.h',45,2,0,'Stuff that really in bits/types.h');
INSERT INTO HeaderGroup VALUES (115,'Base Types',7,0,1,'');
INSERT INTO HeaderGroup VALUES (116,'IceReplyWaitInfo Structre',7,2,1,'');
INSERT INTO HeaderGroup VALUES (117,'ICE Function Pointers',7,4,1,'');
INSERT INTO HeaderGroup VALUES (118,'Ice Structures',7,3,1,'');
INSERT INTO HeaderGroup VALUES (119,'Base Types',9,0,1,'Generic SM pointer, Connection objects.  Defined in SMlibint.h');
INSERT INTO HeaderGroup VALUES (120,'SM Function Pointers',9,3,1,'Client callbacks');
INSERT INTO HeaderGroup VALUES (121,'SM Property Structures',9,1,1,'Session Management property');
INSERT INTO HeaderGroup VALUES (122,'SmcCallback Structure',9,4,1,'Callbacks set up at SmcOpenConnection time');
INSERT INTO HeaderGroup VALUES (123,'SM callbacks',9,5,1,'Session manager callbacks');
INSERT INTO HeaderGroup VALUES (124,'Session Managemnet structures',9,6,1,'Callbacks set up by a session manager when a new client connects.');
INSERT INTO HeaderGroup VALUES (125,'New client proc',9,7,1,'');
INSERT INTO HeaderGroup VALUES (126,'Error Handling Procs',9,8,1,'Error handlers');
INSERT INTO HeaderGroup VALUES (127,'SM CloseStatus',9,2,1,'SmcCloseConnection status return');
INSERT INTO HeaderGroup VALUES (128,'Base Types',6,1,1,'');
INSERT INTO HeaderGroup VALUES (129,'ColorStructre',6,2,1,'XCMS Color Structure');
INSERT INTO HeaderGroup VALUES (130,'Per Screen Structures',6,3,1,'XCMS Per Screen related data');
INSERT INTO HeaderGroup VALUES (131,'Color Conversion Procs',6,4,1,'');
INSERT INTO HeaderGroup VALUES (132,'Color Conversion Structures',6,5,1,'XCMS Color Conversion Context');
INSERT INTO HeaderGroup VALUES (133,'per color space Structres',6,7,1,'Color Space -- per Color Space related data (Device-Independent or Device-Dependent)');
INSERT INTO HeaderGroup VALUES (134,'ListPtr type',6,6,1,'');
INSERT INTO HeaderGroup VALUES (135,'Default HeaderGroup for X11/Xauth.h',81,0,0,'Default HeaderGroup for X11/Xauth.h');
INSERT INTO HeaderGroup VALUES (136,'Base types',79,1,1,'');
INSERT INTO HeaderGroup VALUES (137,'XSI attributes',70,2,1,'');
INSERT INTO HeaderGroup VALUES (138,'Base Types',38,1,1,'');
INSERT INTO HeaderGroup VALUES (139,'Default HeaderGroup for setjmph.',82,0,0,'Default HeaderGroup for setjmph.');
INSERT INTO HeaderGroup VALUES (140,'Base Types',40,1,1,'');
INSERT INTO HeaderGroup VALUES (239,'Type of a signal handling function.',41,2,1,'Type of a signal handling function.');
INSERT INTO HeaderGroup VALUES (142,'Base Types',48,1,1,'');
INSERT INTO HeaderGroup VALUES (143,'Returned by clock()',60,2,1,'Returned by clock()');
INSERT INTO HeaderGroup VALUES (144,'errno values',17,1,1,'errno values');
INSERT INTO HeaderGroup VALUES (145,'These are all the characteristics of characters',14,1,1,'These are all the characteristics of characters');
INSERT INTO HeaderGroup VALUES (146,'aio_cancel returns',10,1,1,'Returned by aio_cancel');
INSERT INTO HeaderGroup VALUES (147,'LIO opcodes',10,2,1,'LIO opcodes');
INSERT INTO HeaderGroup VALUES (148,'LIO modes',10,3,1,'LIO modes');
INSERT INTO HeaderGroup VALUES (149,'I/O control block',10,4,1,'I/O control block');
INSERT INTO HeaderGroup VALUES (150,'RESERVED RESOURCE AND CONSTANT DEFINITIONS',68,2,1,'RESERVED RESOURCE AND CONSTANT DEFINITIONS');
INSERT INTO HeaderGroup VALUES (151,'EVENT DEFINITIONS',68,3,1,'EVENT DEFINITIONS');
INSERT INTO HeaderGroup VALUES (152,'Event names',68,4,1,'Event names');
INSERT INTO HeaderGroup VALUES (153,'Key masks',68,5,1,'Key masks');
INSERT INTO HeaderGroup VALUES (154,'modifier names',68,6,1,'modifier names');
INSERT INTO HeaderGroup VALUES (155,'button masks',68,7,1,'button masks');
INSERT INTO HeaderGroup VALUES (156,'button names',68,8,1,'button names');
INSERT INTO HeaderGroup VALUES (157,'Notify modes',68,9,1,'Notify modes');
INSERT INTO HeaderGroup VALUES (158,'Notify detail',68,10,1,'Notify detail');
INSERT INTO HeaderGroup VALUES (159,'Visibility notify',68,11,1,'Visibility notify');
INSERT INTO HeaderGroup VALUES (160,'Circulation request',68,12,1,'Circulation request');
INSERT INTO HeaderGroup VALUES (161,'protocol families',68,13,1,'protocol families');
INSERT INTO HeaderGroup VALUES (162,'Property notification',68,14,1,'Property notification');
INSERT INTO HeaderGroup VALUES (163,'Color Map notification',68,15,1,'Color Map notification');
INSERT INTO HeaderGroup VALUES (164,'GrabPointer, GrabButton, GrabKeyboard, GrabKey Modes',68,16,1,'GrabPointer, GrabButton, GrabKeyboard, GrabKey Modes');
INSERT INTO HeaderGroup VALUES (165,'GrabPointer, GrabKeyboard reply status',68,17,1,'GrabPointer, GrabKeyboard reply status');
INSERT INTO HeaderGroup VALUES (166,'AllowEvents modes',68,18,1,'AllowEvents modes');
INSERT INTO HeaderGroup VALUES (167,'Used in SetInputFocus, GetInputFocus',68,19,1,'Used in SetInputFocus, GetInputFocus');
INSERT INTO HeaderGroup VALUES (168,'ERROR CODES',68,20,1,'ERROR CODES');
INSERT INTO HeaderGroup VALUES (169,'Window classes used by CreateWindow',68,21,1,'Window classes used by CreateWindow');
INSERT INTO HeaderGroup VALUES (170,'Window attributes for CreateWindow and ChangeWindowAttribute',68,22,1,'Window attributes for CreateWindow and ChangeWindowAttributes');
INSERT INTO HeaderGroup VALUES (171,'ConfigureWindow structure',68,23,1,'ConfigureWindow structure');
INSERT INTO HeaderGroup VALUES (172,'Bit Gravity',68,24,1,'Bit Gravity');
INSERT INTO HeaderGroup VALUES (173,'Window gravity + bit gravity above',68,25,1,'Window gravity + bit gravity above');
INSERT INTO HeaderGroup VALUES (174,'Used in CreateWindow for backing-store hint',68,26,1,'Used in CreateWindow for backing-store hint');
INSERT INTO HeaderGroup VALUES (175,'Used in GetWindowAttributes reply',68,27,1,'Used in GetWindowAttributes reply');
INSERT INTO HeaderGroup VALUES (176,'Used in ChangeSaveSet',68,28,1,'Used in ChangeSaveSet');
INSERT INTO HeaderGroup VALUES (177,'Used in ChangeCloseDownMode',68,29,1,'Used in ChangeCloseDownMode');
INSERT INTO HeaderGroup VALUES (178,'Window stacking method (in configureWindow)',68,30,1,'Window stacking method (in configureWindow)');
INSERT INTO HeaderGroup VALUES (179,'Circulation direction',68,31,1,'Circulation direction');
INSERT INTO HeaderGroup VALUES (180,'Property modes',68,32,1,'Property modes');
INSERT INTO HeaderGroup VALUES (181,'GRAPHICS DEFINITIONS',68,33,1,'GRAPHICS DEFINITIONS');
INSERT INTO HeaderGroup VALUES (182,'graphics functions',68,34,1,'graphics functions, as in GC.alu');
INSERT INTO HeaderGroup VALUES (183,'LineStyle',68,35,1,'LineStyle');
INSERT INTO HeaderGroup VALUES (184,'capStyle',68,36,1,'capStyle');
INSERT INTO HeaderGroup VALUES (185,'joinStyle',68,37,1,'joinStyle');
INSERT INTO HeaderGroup VALUES (186,'fillStyle',68,38,1,'fillStyle');
INSERT INTO HeaderGroup VALUES (187,'fillRule',68,39,1,'fillRule');
INSERT INTO HeaderGroup VALUES (188,'subwindow mode',68,40,1,'subwindow mode');
INSERT INTO HeaderGroup VALUES (189,'SetClipRectangles ordering',68,41,1,'SetClipRectangles ordering');
INSERT INTO HeaderGroup VALUES (190,'CoordinateMode for drawing routines',68,42,1,'CoordinateMode for drawing routines');
INSERT INTO HeaderGroup VALUES (191,'Polygon shapes',68,43,1,'Polygon shapes');
INSERT INTO HeaderGroup VALUES (192,'Arc modes for PolyFillArc',68,44,1,'Arc modes for PolyFillArc');
INSERT INTO HeaderGroup VALUES (193,'GC components',68,45,1,'GC components: masks used in CreateGC, CopyGC, ChangeGC, OR\'ed into    GC.stateChanges');
INSERT INTO HeaderGroup VALUES (194,'FONTS',68,46,1,'FONTS');
INSERT INTO HeaderGroup VALUES (195,'used in QueryFont -- draw direction',68,47,1,'used in QueryFont -- draw direction');
INSERT INTO HeaderGroup VALUES (196,'IMAGING',68,48,1,'IMAGING');
INSERT INTO HeaderGroup VALUES (197,'ImageFormat -- PutImage, GetImage',68,49,1,'ImageFormat -- PutImage, GetImage');
INSERT INTO HeaderGroup VALUES (198,'COLOR MAP STUFF',68,50,1,'COLOR MAP STUFF');
INSERT INTO HeaderGroup VALUES (199,'For CreateColormap',68,51,1,'For CreateColormap');
INSERT INTO HeaderGroup VALUES (200,'Flags used in StoreNamedColor, StoreColors',68,52,1,'Flags used in StoreNamedColor, StoreColors');
INSERT INTO HeaderGroup VALUES (201,'CURSOR STUFF',68,53,1,'CURSOR STUFF');
INSERT INTO HeaderGroup VALUES (202,'QueryBestSize Class',68,54,1,'QueryBestSize Class');
INSERT INTO HeaderGroup VALUES (203,'KEYBOARD/POINTER STUFF',68,55,1,'KEYBOARD/POINTER STUFF');
INSERT INTO HeaderGroup VALUES (204,'masks for ChangeKeyboardControl',68,56,1,'masks for ChangeKeyboardControl');
INSERT INTO HeaderGroup VALUES (205,'SCREEN SAVER STUFF',68,57,1,'SCREEN SAVER STUFF');
INSERT INTO HeaderGroup VALUES (206,'for ForceScreenSaver',68,58,1,'for ForceScreenSaver');
INSERT INTO HeaderGroup VALUES (207,'HOSTS AND CONNECTIONS',68,59,1,'HOSTS AND CONNECTIONS');
INSERT INTO HeaderGroup VALUES (208,'for ChangeHosts',68,60,1,'for ChangeHosts');
INSERT INTO HeaderGroup VALUES (209,'for ChangeAccessControl',68,61,1,'for ChangeAccessControl');
INSERT INTO HeaderGroup VALUES (210,'Display classes',68,62,1,'Display classes  used in opening the connection Note that the statically allocated ones are even numbered and the dynamically changeable ones are odd numbered');
INSERT INTO HeaderGroup VALUES (211,'Byte order',68,63,1,'Byte order  used in imageByteOrder and bitmapBitOrder');
INSERT INTO HeaderGroup VALUES (212,'Values for the FLAG argument',21,1,1,'Values for the FLAG argument to the user function passed to `ftw\' and \'nftw\'.');
INSERT INTO HeaderGroup VALUES (213,'Flags for fourth argument of `nftw\'.',21,2,1,'Flags for fourth argument of `nftw\'.');
INSERT INTO HeaderGroup VALUES (214,'Structure used for fourth argument to callback function for',21,3,1,'Structure used for fourth argument to callback function for `nftw\'.');
INSERT INTO HeaderGroup VALUES (215,'Convenient types for callback functions.',21,4,1,'Convenient types for callback functions.');
INSERT INTO HeaderGroup VALUES (216,'open-only flags',18,1,1,'flags for open(2)');
INSERT INTO HeaderGroup VALUES (217,'access() flags',18,2,1,'flags for access(2)');
INSERT INTO HeaderGroup VALUES (218,'structure describing an open directory',15,1,1,'structure describing an open directory');
INSERT INTO HeaderGroup VALUES (219,'structure describing a directory entry',15,3,1,'structure describing a directory entry');
INSERT INTO HeaderGroup VALUES (220,'File types for `d_type\'',15,2,1,'File types for `d_type\'');
INSERT INTO HeaderGroup VALUES (221,'glob state structure',3,3,1,'');
INSERT INTO HeaderGroup VALUES (222,'glob state structure (64 bit version)',3,4,1,'');
INSERT INTO HeaderGroup VALUES (223,'Bits set in the FLAGS argument to `glob\'',3,1,1,'Bits set in the FLAGS argument to `glob\'.');
INSERT INTO HeaderGroup VALUES (224,'Error returns from `glob\'',3,2,1,'Error returns from `glob\'.');
INSERT INTO HeaderGroup VALUES (225,'The group structure.',4,1,1,'');
INSERT INTO HeaderGroup VALUES (226,'Identifier for conversion method from one codeset to another',22,1,1,'Identifier for conversion method from one codeset to another');
INSERT INTO HeaderGroup VALUES (227,'Basic Integral Types',23,1,1,'Basic Integral Types');
INSERT INTO HeaderGroup VALUES (228,'Structure giving information about numeric and monetary nota',27,1,1,'Structure giving information about numeric and monetary notation');
INSERT INTO HeaderGroup VALUES (229,'Message catalog descriptor type',32,1,1,'Message catalog descriptor type');
INSERT INTO HeaderGroup VALUES (230,'Type used by `nl_langinfo\'',32,2,1,'Type used by `nl_langinfo\'');
INSERT INTO HeaderGroup VALUES (231,'The passwd structure.',34,1,1,'The passwd structure.');
INSERT INTO HeaderGroup VALUES (232,'regexp syntax',35,1,1,'The following bits are used to determine the regexp syntax we    recognize.  The set/not-set meanings are chosen so that Emacs syntax    remains the value 0.  The bits are given in alphabetical order, and    the definitions shifted by one from the previous bit; thus, when we    add or remove a bit, only one other definition need change.');
INSERT INTO HeaderGroup VALUES (233,'regex error codes',35,2,1,'regex error codes');
INSERT INTO HeaderGroup VALUES (234,'Space that holds the compiled pattern',35,3,1,'');
INSERT INTO HeaderGroup VALUES (235,'System specific semaphore definition',39,1,1,'System specific semaphore definition');
INSERT INTO HeaderGroup VALUES (236,'Value returned if `sem_open\' failed',39,2,1,'Value returned if `sem_open\' failed');
INSERT INTO HeaderGroup VALUES (237,'Maximum value the semaphore can have',39,3,1,'Maximum value the semaphore can have');
INSERT INTO HeaderGroup VALUES (238,'System defined signals.',41,4,1,'System defined signals.');
INSERT INTO HeaderGroup VALUES (240,'Default HeaderGroup for bits/dirent.h',83,0,0,'Default HeaderGroup for bits/dirent.h');
INSERT INTO HeaderGroup VALUES (241,'POSIX 1003.1b sigval',41,5,1,'POSIX 1003.1b sigval');
INSERT INTO HeaderGroup VALUES (242,'POSIX 1003.1b sigevent',41,6,1,'POSIX 1003.1b sigevent');
INSERT INTO HeaderGroup VALUES (243,'POSIX 1003.1b siginfo',41,7,1,'POSIX 1003.1b siginfo');
INSERT INTO HeaderGroup VALUES (244,'sigset_t',41,30,1,'sigset_t');
INSERT INTO HeaderGroup VALUES (245,'sigaction',41,31,1,'sigaction');
INSERT INTO HeaderGroup VALUES (246,'colors',70,3,1,'colors');
INSERT INTO HeaderGroup VALUES (247,'values for the _flags member',70,4,1,'values for the _flags member');
INSERT INTO HeaderGroup VALUES (248,'Pseudo-character tokens outside ASCII range.',70,8,1,'Pseudo-character tokens outside ASCII range.');
INSERT INTO HeaderGroup VALUES (249,'event masks',70,9,1,'event masks');
INSERT INTO HeaderGroup VALUES (250,'curses related structures',70,6,1,'curses related structures');
INSERT INTO HeaderGroup VALUES (251,'Structure used in sigaltstack call.',41,32,1,'Structure used in sigaltstack call.');
INSERT INTO HeaderGroup VALUES (252,'The opaque type of streams.',42,1,1,'The opaque type of streams.');
INSERT INTO HeaderGroup VALUES (253,'The possibilities for the third argument to `setvbuf\'.',42,2,1,'The possibilities for the third argument to `setvbuf\'.');
INSERT INTO HeaderGroup VALUES (254,'The possibilities for the third argument to `fseek\'.',42,3,1,'The possibilities for the third argument to `fseek\'.');
INSERT INTO HeaderGroup VALUES (255,'End of file character.',42,4,1,'End of file character.');
INSERT INTO HeaderGroup VALUES (256,'Returned by `div\'.',43,1,1,'Returned by `div\'.');
INSERT INTO HeaderGroup VALUES (257,'Returned by `ldiv\'.',43,2,1,'Returned by `ldiv\'.');
INSERT INTO HeaderGroup VALUES (258,'Returned by `lldiv\'.',43,3,1,'Returned by `lldiv\'.');
INSERT INTO HeaderGroup VALUES (259,'Returned by `time\'',60,3,0,'Returned by `time\'');
INSERT INTO HeaderGroup VALUES (260,'POSIX.1b structure for a time value.',60,4,1,'POSIX.1b structure for a time value.');
INSERT INTO HeaderGroup VALUES (261,'Used by other time functions.',60,5,1,'Used by other time functions.');
INSERT INTO HeaderGroup VALUES (262,'Values for the second argument to access.',62,1,1,'Values for the second argument to access.');
INSERT INTO HeaderGroup VALUES (263,'Bits set in the FLAGS argument to `wordexp\'.',66,1,1,'Bits set in the FLAGS argument to `wordexp\'.');
INSERT INTO HeaderGroup VALUES (264,'Structure describing a word-expansion run.',66,2,1,'Structure describing a word-expansion run.');
INSERT INTO HeaderGroup VALUES (265,'Possible nonzero return values from `wordexp\'.',66,3,1,'Possible nonzero return values from `wordexp\'.');
INSERT INTO HeaderGroup VALUES (266,'Datatypes',1,1,1,'Datatypes');
INSERT INTO HeaderGroup VALUES (267,'Constants',1,2,1,'Constants');
INSERT INTO HeaderGroup VALUES (268,'Data types',1,3,1,'Data types');
INSERT INTO HeaderGroup VALUES (269,'Primitives',1,4,1,'Primitives');
INSERT INTO HeaderGroup VALUES (270,'Vertex Arrays',1,5,1,'Vertex Arrays');
INSERT INTO HeaderGroup VALUES (271,'Matrix Mode',1,6,1,'Matrix Mode');
INSERT INTO HeaderGroup VALUES (287,'Default HeaderGroup for X11/extensions/shape.h',84,0,0,'Default HeaderGroup for X11/extensions/shape.h');
INSERT INTO HeaderGroup VALUES (275,'Points',1,7,0,'Points');
INSERT INTO HeaderGroup VALUES (276,'Lines',1,8,0,'Lines');
INSERT INTO HeaderGroup VALUES (277,'Polygons',1,9,0,'Polygons');
INSERT INTO HeaderGroup VALUES (278,'Display Lists',1,10,0,'Display Lists');
INSERT INTO HeaderGroup VALUES (279,'Depth buffer',1,11,0,'Depth buffer');
INSERT INTO HeaderGroup VALUES (280,'Lighting',1,12,0,'Lighting');
INSERT INTO HeaderGroup VALUES (281,'User clipping planes',1,13,0,'User clipping planes');
INSERT INTO HeaderGroup VALUES (282,'Accumulation buffer',1,14,0,'Accumulation buffer');
INSERT INTO HeaderGroup VALUES (283,'Alpha testing',1,15,0,'Alpha testing');
INSERT INTO HeaderGroup VALUES (284,'Blending',1,16,0,'Blending');
INSERT INTO HeaderGroup VALUES (285,'Render Mode',1,17,0,'Render Mode');
INSERT INTO HeaderGroup VALUES (286,'Feedback',1,18,0,'Feedback');
INSERT INTO HeaderGroup VALUES (290,'Default HeaderGroup for X11/extensions/XKBgeom.h',87,0,0,'Default HeaderGroup for X11/extensions/XKBgeom.h');
INSERT INTO HeaderGroup VALUES (291,'Default HeaderGroup for X11/XKBlib.h',88,0,0,'Default HeaderGroup for X11/XKBlib.h');
INSERT INTO HeaderGroup VALUES (292,'Default HeaderGroup for X11/Xresource.h',89,0,0,'Default HeaderGroup for X11/Xresource.h');
INSERT INTO HeaderGroup VALUES (293,'Default HeaderGroup for X11/Intrinsic.h',90,0,0,'Default HeaderGroup for X11/Intrinsic.h');
INSERT INTO HeaderGroup VALUES (294,'Default HeaderGroup for X11/Composite.h',91,0,0,'Default HeaderGroup for X11/Composite.h');
INSERT INTO HeaderGroup VALUES (295,'Default HeaderGroup for X11/StringDefs.h',92,0,0,'Default HeaderGroup for X11/StringDefs.h');
INSERT INTO HeaderGroup VALUES (296,'Default HeaderGroup for X11/Shell.h',93,0,0,'Default HeaderGroup for X11/Shell.h');
INSERT INTO HeaderGroup VALUES (297,'Default HeaderGroup for X11/IntrinsicP.h',94,0,0,'Default HeaderGroup for X11/IntrinsicP.h');
INSERT INTO HeaderGroup VALUES (298,'Default HeaderGroup for sys/time.h',95,0,0,'Default HeaderGroup for sys/time.h');
INSERT INTO HeaderGroup VALUES (299,'Default HeaderGroup for sys/timex.h',96,0,0,'Default HeaderGroup for sys/timex.h');
INSERT INTO HeaderGroup VALUES (300,'Default HeaderGroup for zlib.h',97,0,0,'Default HeaderGroup for zlib.h');
INSERT INTO HeaderGroup VALUES (301,'Default HeaderGroup for rpc/auth.h',98,0,1,'Default HeaderGroup for rpc/auth.h');
INSERT INTO HeaderGroup VALUES (302,'Default HeaderGroup for rpc/rpc.h',99,0,1,'Default HeaderGroup for rpc/rpc.h');
INSERT INTO HeaderGroup VALUES (303,'Default HeaderGroup for rpc/clnt.h',100,0,0,'Default HeaderGroup for rpc/clnt.h');
INSERT INTO HeaderGroup VALUES (304,'Default HeaderGroup for rpc/xdr.h',101,0,0,'Default HeaderGroup for rpc/xdr.h');
INSERT INTO HeaderGroup VALUES (305,'Default HeaderGroup for complex.h',102,0,0,'Default HeaderGroup for complex.h');
INSERT INTO HeaderGroup VALUES (306,'Default HeaderGroup for rpc/svc.h',103,0,0,'Default HeaderGroup for rpc/svc.h');
INSERT INTO HeaderGroup VALUES (307,'Default HeaderGroup for getopt.h',104,0,0,'Default HeaderGroup for getopt.h');
INSERT INTO HeaderGroup VALUES (308,'Default HeaderGroup for sys/io.h',105,0,0,'Default HeaderGroup for sys/io.h');
INSERT INTO HeaderGroup VALUES (309,'Default HeaderGroup for X11/RectObj.h',106,0,0,'Default HeaderGroup for X11/RectObj.h');
INSERT INTO HeaderGroup VALUES (310,'Default HeaderGroup for X11/CompositeP.h',107,0,0,'Default HeaderGroup for X11/CompositeP.h');
INSERT INTO HeaderGroup VALUES (311,'Maximum Multibyte character length',26,1,1,'Maximum length of any multibyte character in any locale.');
INSERT INTO HeaderGroup VALUES (312,'Character attributes',26,2,1,'Number of bits in a `char\'.');
INSERT INTO HeaderGroup VALUES (313,'Short attributes',26,3,1,'Minimum and maximum values a `signed short int\' can hold.');
INSERT INTO HeaderGroup VALUES (314,'Integer Attributes',26,4,1,'Minimum and maximum values a `int\' can hold.');
INSERT INTO HeaderGroup VALUES (315,'Long Integer Attributes',26,5,1,'Minimum and maximum values a `long int\' can hold.');
INSERT INTO HeaderGroup VALUES (316,'These are the possibilities for the first argument to setloc',27,2,1,'These are the possibilities for the first argument to setlocale.');
INSERT INTO HeaderGroup VALUES (317,'Some useful constants',29,2,1,'Some useful constants');
INSERT INTO HeaderGroup VALUES (318,'machine-dependent HUGE_VAL value',29,1,1,'machine-dependent HUGE_VAL value');
INSERT INTO HeaderGroup VALUES (319,'Initializers',33,7,0,'Initializers');
INSERT INTO HeaderGroup VALUES (320,'Values for attributes.',33,8,0,'Values for attributes.');
INSERT INTO HeaderGroup VALUES (321,'Cancellation',33,9,0,'Cancellation');
INSERT INTO HeaderGroup VALUES (322,'POSIX `cflags\' bits',35,4,1,'POSIX `cflags\' bits (i.e., information for `regcomp\').');
INSERT INTO HeaderGroup VALUES (323,'Constants used for fcntl(2)',18,3,1,'Constants used for fcntl(2)');
INSERT INTO HeaderGroup VALUES (324,'Filename Matching',20,1,1,'Filename Matching');
INSERT INTO HeaderGroup VALUES (325,'common mode bits',49,1,0,'common mode bits');
INSERT INTO HeaderGroup VALUES (326,'SVID required constants',49,2,0,'SVID required constants (same values as system 5)');
INSERT INTO HeaderGroup VALUES (327,'bits',52,1,0,'');
INSERT INTO HeaderGroup VALUES (328,'Special Control Characters',59,3,1,'Special Control Characters');
INSERT INTO HeaderGroup VALUES (329,'Input flags',59,4,1,'Input flags - software input processing');
INSERT INTO HeaderGroup VALUES (330,'Output flags',59,5,1,'Output flags - software output processing');
INSERT INTO HeaderGroup VALUES (331,'Control flags',59,6,1,'Control flags - hardware control of terminal');
INSERT INTO HeaderGroup VALUES (332,'Local Flags',59,7,1,'\"Local\" flags - dumping ground for other state');
INSERT INTO HeaderGroup VALUES (333,'Standard speeds',59,8,1,'Standard speeds');
INSERT INTO HeaderGroup VALUES (334,'Default HeaderGroup for endian.h',108,0,1,'Default HeaderGroup for endian.h');
INSERT INTO HeaderGroup VALUES (335,'itimerval',95,7,0,'Type of the second argument to `getitimer\' and\r\nthe second and third arguments `setitimer\'.');
INSERT INTO HeaderGroup VALUES (336,'timer types',95,2,0,'Values for the first argument to `getitimer\' and `setitimer\'.');
INSERT INTO HeaderGroup VALUES (337,'time_t',95,1,0,'');
INSERT INTO HeaderGroup VALUES (338,'timespec',95,4,0,'');
INSERT INTO HeaderGroup VALUES (339,'tm',95,5,0,'');
INSERT INTO HeaderGroup VALUES (340,'timeval',95,6,0,'');
INSERT INTO HeaderGroup VALUES (341,'clock_t',60,1,0,'');
INSERT INTO HeaderGroup VALUES (342,'Base Types',33,1,0,'Base Types');
INSERT INTO HeaderGroup VALUES (343,'Mutex Structures',33,3,0,'Mutex Structures');
INSERT INTO HeaderGroup VALUES (344,'Attribute Structures',33,4,0,'Attribute Structures');
INSERT INTO HeaderGroup VALUES (345,'Conition Variables',33,5,0,'Conition Variables');
INSERT INTO HeaderGroup VALUES (346,'Description structure',33,2,0,'Description structure');
INSERT INTO HeaderGroup VALUES (347,'Default HeaderGroup for stddef.h',109,0,0,'Default HeaderGroup for stddef.h');
INSERT INTO HeaderGroup VALUES (348,'sockaddr',48,2,1,'');
INSERT INTO HeaderGroup VALUES (349,'msghdr',48,3,1,'');
INSERT INTO HeaderGroup VALUES (350,'Default HeaderGroup for sys/uio.h',110,0,0,'Default HeaderGroup for sys/uio.h');
INSERT INTO HeaderGroup VALUES (351,'Default HeaderGroup for stdarg.h',111,0,0,'Default HeaderGroup for stdarg.h');
INSERT INTO HeaderGroup VALUES (352,'Default HeaderGroup for sys/param.h',112,0,0,'Default HeaderGroup for sys/param.h');
INSERT INTO HeaderGroup VALUES (353,'Default HeaderGroup for sys/select.h',113,0,0,'Default HeaderGroup for sys/select.h');
INSERT INTO HeaderGroup VALUES (354,'Default HeaderGroup for sys/ioctl.h',114,0,0,'Default HeaderGroup for sys/ioctl.h');
INSERT INTO HeaderGroup VALUES (355,'Default HeaderGroup for netdb.h',115,0,0,'Default HeaderGroup for netdb.h');
INSERT INTO HeaderGroup VALUES (356,'Default HeaderGroup for arpa/inet.h',116,0,0,'Default HeaderGroup for arpa/inet.h');
INSERT INTO HeaderGroup VALUES (357,'Default HeaderGroup for netinet/in.h',117,0,0,'Default HeaderGroup for netinet/in.h');
INSERT INTO HeaderGroup VALUES (358,'Default HeaderGroup for netinet/tcp.h',118,0,0,'Default HeaderGroup for netinet/tcp.h');
INSERT INTO HeaderGroup VALUES (359,'Address Families',48,4,1,'');
INSERT INTO HeaderGroup VALUES (360,'Socket Types',48,6,1,'');
INSERT INTO HeaderGroup VALUES (361,'Socket Options',48,7,1,'');
INSERT INTO HeaderGroup VALUES (362,'IPV4 addresses',117,4,1,'Address structures for IPv4');
INSERT INTO HeaderGroup VALUES (363,'IPV6 addresses',117,7,1,'Address structures for IPv6');
INSERT INTO HeaderGroup VALUES (364,'jmpbuf',40,3,1,'');
INSERT INTO HeaderGroup VALUES (365,'FPU State',41,35,1,'FPU state information');
INSERT INTO HeaderGroup VALUES (366,'Posix Features',62,2,1,'');
INSERT INTO HeaderGroup VALUES (367,'Pathconf names',62,3,1,'`pathconf\' NAME values.');
INSERT INTO HeaderGroup VALUES (368,'Sysconf names',62,4,1,'`sysconf\' NAME values.');
INSERT INTO HeaderGroup VALUES (369,'Confstr names',62,5,1,'`confstr\' NAME values.');
INSERT INTO HeaderGroup VALUES (370,'X/Open Features',62,6,1,'');
INSERT INTO HeaderGroup VALUES (371,'termios types',59,1,1,'');
INSERT INTO HeaderGroup VALUES (372,'Termios Structure',59,2,1,'');
INSERT INTO HeaderGroup VALUES (373,'msg types',50,1,0,'Base types for messages');
INSERT INTO HeaderGroup VALUES (374,'msqid_t',50,2,0,'Message Queue structure');
INSERT INTO HeaderGroup VALUES (375,'Default headgroup for sys/timeb.h',119,1,1,'Default head group');
INSERT INTO HeaderGroup VALUES (376,'Function Control',121,1,1,'Values to control `fmtmsg\' function.');
INSERT INTO HeaderGroup VALUES (377,'Severity parameter',121,2,1,'Values to be for SEVERITY parameter of `fmtmsg\'.');
INSERT INTO HeaderGroup VALUES (378,'Default HeaderGroup for fmtmsg.h',121,0,1,'');
INSERT INTO HeaderGroup VALUES (379,'NULL parameters',121,3,1,'Macros which can be used as null values for the arguments of `fmtmsg\'.');
INSERT INTO HeaderGroup VALUES (380,'Return values',121,4,1,'Possible return values of `fmtmsg\'.');
INSERT INTO HeaderGroup VALUES (381,'Default HeaderGroup for syslog.h',122,0,1,'');
INSERT INTO HeaderGroup VALUES (382,'syslog Priorities',122,1,1,'priorities (these are ordered)');
INSERT INTO HeaderGroup VALUES (383,'facility codes',122,2,1,'facility codes');
INSERT INTO HeaderGroup VALUES (384,'other codes',122,3,1,'other codes through 15 reserved for system use');
INSERT INTO HeaderGroup VALUES (385,'arguments to setlogmask.',122,4,1,'arguments to setlogmask.');
INSERT INTO HeaderGroup VALUES (386,'Option flags for openlog.',122,5,1,'Option flags for openlog.');
INSERT INTO HeaderGroup VALUES (387,'Default HeaderGroup for ucontext.h',123,0,1,'');
INSERT INTO HeaderGroup VALUES (388,'greg_t',123,1,1,'Type for general register.');
INSERT INTO HeaderGroup VALUES (389,'NREG',123,2,1,'Number of general registers.');
INSERT INTO HeaderGroup VALUES (390,'gregset',123,3,1,'Container for all general registers.');
INSERT INTO HeaderGroup VALUES (391,'gregset reg defs',123,4,1,'Number of each register is the `gregset_t\' array.');
INSERT INTO HeaderGroup VALUES (392,'fpreg',123,5,1,'Definitions taken from the kernel headers.');
INSERT INTO HeaderGroup VALUES (393,'fpstate',123,6,1,'');
INSERT INTO HeaderGroup VALUES (394,'fpregset_t',123,7,1,'Structure to describe FPU registers.');
INSERT INTO HeaderGroup VALUES (395,'mcontext_t',123,9,1,'Context to describe whole processor state.');
INSERT INTO HeaderGroup VALUES (396,'ucontext_t',123,11,1,'Userlevel context.');
INSERT INTO HeaderGroup VALUES (397,'jmpbuf tag',40,2,1,'');
INSERT INTO HeaderGroup VALUES (398,'fd_set',45,4,1,'');
INSERT INTO HeaderGroup VALUES (399,'time values',45,5,1,'Time related types');
INSERT INTO HeaderGroup VALUES (400,'FP registers',41,34,1,'FP registers');
INSERT INTO HeaderGroup VALUES (401,'sigcontext',41,36,1,'Process context when signal delivered');
INSERT INTO HeaderGroup VALUES (402,'Base Types',57,1,0,'');
INSERT INTO HeaderGroup VALUES (403,'rlimit',57,2,0,'');
INSERT INTO HeaderGroup VALUES (404,'rusage',57,3,0,'');
INSERT INTO HeaderGroup VALUES (405,'Base Types',51,1,0,'');
INSERT INTO HeaderGroup VALUES (406,'shmid_ds',51,2,0,'');
INSERT INTO HeaderGroup VALUES (407,'CompositePart',107,1,1,'Additional instance fields for widgets of (sub)class \'Composite\'');
INSERT INTO HeaderGroup VALUES (408,'CompositeRec',107,2,1,'');
INSERT INTO HeaderGroup VALUES (409,'CompositeClassPart',107,3,1,'Additional class fields for widgets of (sub)class \'Composite\'');
INSERT INTO HeaderGroup VALUES (410,'CompositeClassExtensionRec',107,4,1,'');
INSERT INTO HeaderGroup VALUES (411,'CompositeClassRec',107,5,1,'');
INSERT INTO HeaderGroup VALUES (412,'Default HeaderGroup for X11/ContrainP.h',124,0,0,'');
INSERT INTO HeaderGroup VALUES (413,'Defaut HeaderGroup for X11/constraint.h',125,0,1,'');
INSERT INTO HeaderGroup VALUES (414,'Default HeaderGroup for X11/ObjectP.h',128,0,1,'');
INSERT INTO HeaderGroup VALUES (415,'Default HeaderGroup for X11/Object.h',127,0,1,'');
INSERT INTO HeaderGroup VALUES (416,'ObjectPart',128,1,1,'Object Instance Data Structures');
INSERT INTO HeaderGroup VALUES (417,'ObjectRec',128,2,1,'');
INSERT INTO HeaderGroup VALUES (418,'ObjectClassPart',128,3,1,'Object Class Data Structures');
INSERT INTO HeaderGroup VALUES (419,'ObjectClassExtensionRec',128,5,1,'');
INSERT INTO HeaderGroup VALUES (420,'ObjectClassRec',128,6,1,'');
INSERT INTO HeaderGroup VALUES (421,'_ObjectClassExtensionRec',128,4,1,'');
INSERT INTO HeaderGroup VALUES (422,'Default HeaderGroup for poll.h',129,0,1,'');
INSERT INTO HeaderGroup VALUES (423,'WINDOW Structure',70,7,1,'');
INSERT INTO HeaderGroup VALUES (424,'Action function pointer',38,2,1,'');
INSERT INTO HeaderGroup VALUES (425,'Base Types',97,1,0,'');
INSERT INTO HeaderGroup VALUES (426,'z_stream',97,3,0,'');
INSERT INTO HeaderGroup VALUES (427,'Exposed types',97,4,0,'');
INSERT INTO HeaderGroup VALUES (428,'Derived Types',97,2,0,'');
INSERT INTO HeaderGroup VALUES (430,'Default HeaderGroup for sys/poll.h',130,0,1,'');
INSERT INTO HeaderGroup VALUES (431,'Lock structures',33,6,0,'Lock structures');
INSERT INTO HeaderGroup VALUES (434,'utmp struct',131,1,1,'The structure describing an entry in the user accounting database.');
INSERT INTO HeaderGroup VALUES (433,'Default HeaderGroup for utmp.h',131,0,1,'');
INSERT INTO HeaderGroup VALUES (435,'ut_type values',131,2,1,'Values for the `ut_type\' field of a `struct utmp\'.');
INSERT INTO HeaderGroup VALUES (436,'Default HeadGroup for net/if.h',133,0,1,'');
INSERT INTO HeaderGroup VALUES (437,'Standard interface flags.',133,1,1,'Standard interface flags.');
INSERT INTO HeaderGroup VALUES (438,'The ifaddr structure',133,3,1,'The ifaddr structure contains information about one address of an\r\n   interface.  They are maintained by the different address families,\r\n   are allocated and attached when an address is set, and are linked\r\n   together so all addresses for an interface can be located.');
INSERT INTO HeaderGroup VALUES (439,'Interface request structure',133,4,1,'Interface request structure used for socket ioctl\'s.  All interface\r\n   ioctl\'s must have parameter definitions which begin with ifr_name.\r\n   The remainder may be interface specific.');
INSERT INTO HeaderGroup VALUES (440,'Structure used in SIOCGIFCONF request.',133,5,1,'Structure used in SIOCGIFCONF request.  Used to retrieve interface\r\n   configuration for machine (useful for programs which must know all\r\n   networks accessible).');
INSERT INTO HeaderGroup VALUES (441,'Default HeaderGroup for sys/file.h',120,0,0,'');
INSERT INTO HeaderGroup VALUES (442,'Default HeaderGroup for sys/un.h',134,0,1,'');
INSERT INTO HeaderGroup VALUES (443,'Order Definitions',23,1,1,'');
INSERT INTO HeaderGroup VALUES (444,'Platform Defintions',23,2,1,'');
INSERT INTO HeaderGroup VALUES (445,'DayOFWeek',25,2,1,'Abbreviated days of the week.');
INSERT INTO HeaderGroup VALUES (446,'Day Names',25,3,1,'Long-named days of the week.');
INSERT INTO HeaderGroup VALUES (447,'Abbrev month names',25,4,1,'Abbreviated month names.');
INSERT INTO HeaderGroup VALUES (448,'Month names',25,5,1,'Long month names.');
INSERT INTO HeaderGroup VALUES (449,'AM/PM',25,6,1,'');
INSERT INTO HeaderGroup VALUES (450,'strftime',25,7,1,'');
INSERT INTO HeaderGroup VALUES (451,'Eras',25,8,1,'');
INSERT INTO HeaderGroup VALUES (452,'LC_MONETARY category',25,11,1,'LC_MONETARY category: formatting of monetary quantities. These items each correspond to a member of `struct lconv\', defined in <locale.h>.');
INSERT INTO HeaderGroup VALUES (453,'LC_NUMERIC category',25,12,1,'LC_NUMERIC category: formatting of numbers. These also correspond to members of `struct lconv\'; see <locale.h>.');
INSERT INTO HeaderGroup VALUES (454,'LC_TIME category: date and time formatting.',25,1,1,'LC_TIME category: date and time formatting.');
INSERT INTO HeaderGroup VALUES (455,'LC_CTYPE category',25,10,1,'LC_CTYPE category: character classification. This information is accessed by the functions in <ctype.h>.These \'nl_langinfo\' names are used only internally.');
INSERT INTO HeaderGroup VALUES (456,'LC_COLLATE category',25,9,1,' LC_COLLATE category: text sorting. This information is accessed by the strcoll and strxfrm functions. These `nl_langinfo\' names are used only internally.');
INSERT INTO HeaderGroup VALUES (457,'Default HeaderGroup for sys/statvfs.h',135,0,1,'');
INSERT INTO HeaderGroup VALUES (458,'Protocol Families',48,5,1,'');
INSERT INTO HeaderGroup VALUES (459,'constants',97,5,0,'');
INSERT INTO HeaderGroup VALUES (460,'Allowed flush values',97,6,0,'');
INSERT INTO HeaderGroup VALUES (461,'Return codes for the compression/decompression functions.',97,7,0,'Return codes for the compression/decompression functions. Negative values are errors, positive values are used for special but normal events.');
INSERT INTO HeaderGroup VALUES (462,'compression levels',97,8,0,'compression levels');
INSERT INTO HeaderGroup VALUES (463,'compression strategy',97,9,0,'compression strategy');
INSERT INTO HeaderGroup VALUES (464,'Possible values of the data_type field',97,10,0,'Possible values of the data_type field');
INSERT INTO HeaderGroup VALUES (465,'Default HeaderGroup for sys/vfs.h',136,0,1,'');
INSERT INTO HeaderGroup VALUES (466,'Default HeaderGroup for stropts.h',137,0,1,'');
INSERT INTO HeaderGroup VALUES (467,'Comment',137,1,1,'The streams interfaces are excluded from the LSB.\r\nThis empty file is needed to make the compilation environment happy.');
INSERT INTO HeaderGroup VALUES (468,'Default HeadGroup for pty.h',138,0,1,'');
INSERT INTO HeaderGroup VALUES (469,'Default HeadGroup for sys/statfs.h',139,0,1,'');
INSERT INTO HeaderGroup VALUES (470,'Default HeadGroup for term.h',140,0,1,'');
INSERT INTO HeaderGroup VALUES (471,'Default HeadGroup for libintl.h',141,0,1,'');
INSERT INTO HeaderGroup VALUES (472,'Default HeaderGroup for security/pam_appl.h',142,0,1,'');
INSERT INTO HeaderGroup VALUES (473,'Values for item_type',142,4,1,'Possible Values for Item_type');
INSERT INTO HeaderGroup VALUES (474,'Pam conversion',142,2,1,'');
INSERT INTO HeaderGroup VALUES (475,'Pam structures',142,1,1,'');
INSERT INTO HeaderGroup VALUES (476,'message',136,1,1,'The interfaces in this header are not included in the LSB. This empty file is provided to make the development environment happy.');
INSERT INTO HeaderGroup VALUES (477,'PAM API Return Values',142,5,1,'PAM API Return Values');
INSERT INTO HeaderGroup VALUES (478,'Valuses for msg_style',142,3,1,'Valid choices for msg_style');
INSERT INTO HeaderGroup VALUES (479,'PAM Flags',142,6,1,'PAM Flags');
INSERT INTO HeaderGroup VALUES (480,'Values to uses as hints',115,2,1,'Values to use as hints');
INSERT INTO HeaderGroup VALUES (481,'Error Values',115,3,1,'Error values for `getaddrinfo\' function.');
INSERT INTO HeaderGroup VALUES (482,'addrinfo flags',115,1,1,'Possible values for `ai_flags\' field in `addrinfo\' structure.');
INSERT INTO HeaderGroup VALUES (483,'Default HeaderGroup for unwind.h',143,0,1,'');
INSERT INTO HeaderGroup VALUES (484,'Base Types',143,1,1,'');
INSERT INTO HeaderGroup VALUES (485,'Reason Codes',143,2,1,'The unwind interface uses reason codes in several contexts to\r\n   identify the reasons for failures or other actions.');
INSERT INTO HeaderGroup VALUES (486,'Exception header',143,4,1,'The unwind interface uses a pointer to an exception header object\r\n   as its representation of an exception being thrown. In general, the\r\n   full representation of an exception object is language- and\r\n   implementation-specific, but it will be prefixed by a header\r\n   understood by the unwind interface.');
INSERT INTO HeaderGroup VALUES (487,'Actions',143,5,1,'The ACTIONS argument to the personality routine is a bitwise OR of one\r\n   or more of the following constants.');
INSERT INTO HeaderGroup VALUES (488,'Cleanup function',143,3,1,'');
INSERT INTO HeaderGroup VALUES (489,'Default HeadGroup for strings.h',144,0,1,'An empty file is needed to prevent the strings.h from the system being included.');
INSERT INTO HeaderGroup VALUES (490,'Default HeaderGroup for rpc/types.h',145,0,1,'');
INSERT INTO HeaderGroup VALUES (491,'client ops',100,3,0,'');
INSERT INTO HeaderGroup VALUES (492,'CLIENT structure',100,2,0,'');
INSERT INTO HeaderGroup VALUES (493,'client stat',100,1,0,'');
INSERT INTO HeaderGroup VALUES (494,'transport handle',103,1,0,'Server side transport handle');
INSERT INTO HeaderGroup VALUES (495,'xp_ops',103,4,0,'');
INSERT INTO HeaderGroup VALUES (496,'auth_stat',98,1,1,'Status returned from authentication check');
INSERT INTO HeaderGroup VALUES (497,'opaque_auth',98,3,1,'Authentication info.  Opaque to client.opaque_auth');
INSERT INTO HeaderGroup VALUES (498,'AUTH handle',98,4,1,'Auth handle, interface to client side authenticators.');
INSERT INTO HeaderGroup VALUES (499,'auth_ops',98,5,1,'');
INSERT INTO HeaderGroup VALUES (500,'des_block',98,2,1,'');
INSERT INTO HeaderGroup VALUES (501,'The XDR handle.',101,1,0,'Contains operation which is being applied to the stream, an operations vector for the particular implementation and two private fields for the use of the particular implementation.');
INSERT INTO HeaderGroup VALUES (502,'xdrproc_t',101,3,0,'A xdrproc_t exists for each data type which is to be encoded or decoded.');
INSERT INTO HeaderGroup VALUES (503,' Xdr operations.',101,2,0,' XDR_ENCODE causes the type to be encoded into the stream.  XDR_DECODE causes the type to be extracted from the stream. XDR_FREE can be used to release the space allocated by an XDR_DECODE request.');
INSERT INTO HeaderGroup VALUES (504,'Support struct for discriminated unions.',101,4,0,'Support struct for discriminated unions.');
INSERT INTO HeaderGroup VALUES (505,'Default HeaderGroup for rpc/rpc_msg.h',146,0,1,'');
INSERT INTO HeaderGroup VALUES (506,'Base Types',146,1,1,'');
INSERT INTO HeaderGroup VALUES (507,'accepted_reply',146,2,1,'Reply to an rpc request that was accepted by the server.');
INSERT INTO HeaderGroup VALUES (508,'rejected_reply',146,3,1,'Reply to an rpc request that was rejected by the server.');
INSERT INTO HeaderGroup VALUES (509,'reply_body',146,4,1,'Body of a reply to an rpc request.');
INSERT INTO HeaderGroup VALUES (510,'call_body',146,5,1,'Body of an rpc request call.');
INSERT INTO HeaderGroup VALUES (511,'rpc_msg',146,6,1,'The rpc message');
INSERT INTO HeaderGroup VALUES (512,'Default HeaderGroup for netinet/udp.h',147,0,1,'');
INSERT INTO HeaderGroup VALUES (513,'Device mapping structure.',133,2,1,'');
INSERT INTO HeaderGroup VALUES (514,'Boolean type',70,5,1,'Boolean type');
INSERT INTO HeaderGroup VALUES (515,'mbstate',65,1,1,'This really belongs in wchar.h, but it\'s presense creates a circular dependency with stdio.h, so put it here to break the circle.');
INSERT INTO HeaderGroup VALUES (516,'locale_data structure',27,3,1,'');
INSERT INTO HeaderGroup VALUES (517,'locale_t structure',27,4,1,'');
INSERT INTO HeaderGroup VALUES (518,'locale_t type',27,5,1,'');
INSERT INTO HeaderGroup VALUES (519,'Default HeadGroup for libgen.h',148,0,1,'');
INSERT INTO HeaderGroup VALUES (520,'Default HeaderGroup for utmpx.h',132,0,1,'');
INSERT INTO HeaderGroup VALUES (521,'Source Standard Definitions',149,1,1,'');
INSERT INTO HeaderGroup VALUES (522,'Default HeaderGroup for features.h',149,0,1,'');
INSERT INTO HeaderGroup VALUES (523,'Architecture settings',45,7,1,'Per Architecture settings');
INSERT INTO HeaderGroup VALUES (524,'Symbol Settings',108,8,1,'The visible Symbols');
INSERT INTO HeaderGroup VALUES (525,'Setup the values',45,6,1,'Setup some values');
INSERT INTO HeaderGroup VALUES (526,'utmpx structure',132,2,1,'');
INSERT INTO HeaderGroup VALUES (527,'Value for ut_type',132,3,1,'');
INSERT INTO HeaderGroup VALUES (528,'utmpx member sizes',132,1,1,'');
INSERT INTO HeaderGroup VALUES (529,'psw_t',123,8,1,'');
INSERT INTO HeaderGroup VALUES (530,'Default HeadGroup for typeinfo',150,0,1,'');
INSERT INTO HeaderGroup VALUES (531,'Default HeadGroup for cxxabi.h',151,0,1,'');
INSERT INTO HeaderGroup VALUES (532,'Default HeadGroup for ctype',152,0,1,'');
INSERT INTO HeaderGroup VALUES (533,'Default HeadGroup for rpc/auth_unix.h',153,0,1,'');
INSERT INTO HeaderGroup VALUES (534,'Default HeadGroup for rpc/auth_des.h',154,0,1,'');
INSERT INTO HeaderGroup VALUES (535,'lockf flags',62,7,1,'Flags for lockf()');
INSERT INTO HeaderGroup VALUES (536,'Displatch function type',103,3,0,'');
INSERT INTO HeaderGroup VALUES (537,'svc_req structure',103,2,0,'');
INSERT INTO HeaderGroup VALUES (538,'PPC64 base types',41,1,8,'PPC64 stuff that doesn\'t belong here, but it has to be here to avoid nasty cyclic dependencies');
INSERT INTO HeaderGroup VALUES (539,'PPC64 derived types',41,1,1,'');
INSERT INTO HeaderGroup VALUES (540,'Default headgroup for unctrl.h',155,0,1,'This file intentionally blank.');
INSERT INTO HeaderGroup VALUES (541,'TERMINAL Type',140,1,1,'');
INSERT INTO HeaderGroup VALUES (544,'misc non-standard',70,1,1,'Stuff needed to make other curses related headers happy');
INSERT INTO HeaderGroup VALUES (547,'Multicast Support',117,13,1,'Multicast interfaces to setsockopt()');
INSERT INTO HeaderGroup VALUES (546,'attributes',70,13,1,'attributes');
INSERT INTO HeaderGroup VALUES (548,'Default HeadGroup',156,0,1,'Currently, sendfile() is not allowed in the LSB');
INSERT INTO HeaderGroup VALUES (549,'Standard well-defined IP protocols.',117,1,1,'Standard well-defined IP protocols.');
INSERT INTO HeaderGroup VALUES (550,'Type to represent a port.',117,2,1,'Type to represent a port.');
INSERT INTO HeaderGroup VALUES (551,'Standard well-known ports.',117,3,1,'Standard well-known ports.');
INSERT INTO HeaderGroup VALUES (552,'Well known IPV4 addresses',117,5,1,'Well Know IPv4 addresses');
INSERT INTO HeaderGroup VALUES (555,'Well known IPV6 addresses',117,8,1,'Well known IPV6 addresses');
INSERT INTO HeaderGroup VALUES (553,'Structure describing an Internet V4 socket address.',117,9,1,'Structure describing an Internet socket V4 address.');
INSERT INTO HeaderGroup VALUES (554,'Structure describing an Internet V6 socket address.',117,10,1,'Structure describing an Internet socket V6 address.');
INSERT INTO HeaderGroup VALUES (556,'IP Socket options',117,11,1,'IP Socket options');
INSERT INTO HeaderGroup VALUES (557,'PPC32 base types',41,1,8,'PPC32 stuff that doesn\'t belong here, but it has to be here to avoid nasty cyclic dependencies');
INSERT INTO HeaderGroup VALUES (558,'PPC32 derived types',41,1,1,'');
INSERT INTO HeaderGroup VALUES (559,'uc_regs_ptr',123,10,1,'');
INSERT INTO HeaderGroup VALUES (560,'math_errhandling',29,3,1,'Bitmasks for the math_errhandling macro.');
INSERT INTO HeaderGroup VALUES (561,'priority_which',57,5,0,'The type of the WHICH argument to `getpriority\' and `setpriority\',\r\nindicating what flavor of entity the WHO argument specifies.');
INSERT INTO HeaderGroup VALUES (562,'Priority limits.',57,4,0,'Priority limits.');
INSERT INTO HeaderGroup VALUES (563,'priority_which defines',57,6,0,'');
INSERT INTO HeaderGroup VALUES (564,'Possible values for `ss_flags.\'.',41,33,1,'Possible values for `ss_flags.\'.');
INSERT INTO HeaderGroup VALUES (565,'Values for `si_code\'.',41,8,1,'Values for `si_code\'.  Positive values are reserved for kernel-generated\r\n   signals.');
INSERT INTO HeaderGroup VALUES (566,'`si_code\' values for SIGILL signal.',41,9,1,'`si_code\' values for SIGILL signal.');
INSERT INTO HeaderGroup VALUES (567,'`si_code\' values for SIGFPE signal.',41,10,1,'`si_code\' values for SIGFPE signal.');
INSERT INTO HeaderGroup VALUES (568,'`si_code\' values for SIGSEGV signal.`si_code\' values for SIG',41,11,1,'`si_code\' values for SIGSEGV signal.');
INSERT INTO HeaderGroup VALUES (569,'`si_code\' values for SIGBUS signal.`si_code\' values for SIGB',41,12,1,'`si_code\' values for SIGBUS signal.');
INSERT INTO HeaderGroup VALUES (570,'`si_code\' values for SIGTRAP signal.',41,13,1,'`si_code\' values for SIGTRAP signal.');
INSERT INTO HeaderGroup VALUES (571,'`si_code\' values for SIGCHLD signal.`si_code\' values for SIG',41,14,1,'`si_code\' values for SIGCHLD signal.');
INSERT INTO HeaderGroup VALUES (572,'`si_code\' values for SIGPOLL signal.`si_code\' values for SIG',41,15,1,'`si_code\' values for SIGPOLL signal.');
INSERT INTO HeaderGroup VALUES (573,'Special Signal values',41,3,1,'Special Signal values');
