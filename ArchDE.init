INSERT INTO `ArchDE` VALUES (1,1,31,'Marks end of dynamic section','1.0',NULL);
INSERT INTO `ArchDE` VALUES (2,1,31,'Name of needed library','1.0',NULL);
INSERT INTO `ArchDE` VALUES (3,1,31,'Size in bytes of PLT relocs','1.0',NULL);
INSERT INTO `ArchDE` VALUES (4,2,33,'On the Intel386 architecture, this entrys d_ptr member gives the address of the first entry in the global offset table.','1.0',NULL);
INSERT INTO `ArchDE` VALUES (5,1,31,'Address of symbol hash table','1.0',NULL);
INSERT INTO `ArchDE` VALUES (6,1,31,'Address of string table','1.0',NULL);
INSERT INTO `ArchDE` VALUES (7,1,31,'Address of symbol table','1.0',NULL);
INSERT INTO `ArchDE` VALUES (8,1,31,'Address of Rela relocs','1.0',NULL);
INSERT INTO `ArchDE` VALUES (9,1,31,'Total size of Rela relocs','1.0',NULL);
INSERT INTO `ArchDE` VALUES (10,1,31,'Size of one Rela reloc','1.0',NULL);
INSERT INTO `ArchDE` VALUES (11,1,31,'Size of string table','1.0',NULL);
INSERT INTO `ArchDE` VALUES (12,1,31,'Size of one symbol table entry','1.0',NULL);
INSERT INTO `ArchDE` VALUES (13,1,31,'Address of init function','1.0',NULL);
INSERT INTO `ArchDE` VALUES (14,1,31,'Address of termination function','1.0',NULL);
INSERT INTO `ArchDE` VALUES (15,1,31,'Name of shared object','1.0',NULL);
INSERT INTO `ArchDE` VALUES (16,1,31,'Library search path','1.0',NULL);
INSERT INTO `ArchDE` VALUES (17,1,31,'Start symbol search here','1.0',NULL);
INSERT INTO `ArchDE` VALUES (18,1,31,'Address of Rel relocs','1.0',NULL);
INSERT INTO `ArchDE` VALUES (19,1,31,'Total size of Rel relocs','1.0',NULL);
INSERT INTO `ArchDE` VALUES (20,1,31,'Size of one Rel reloc','1.0',NULL);
INSERT INTO `ArchDE` VALUES (21,1,31,'Type of reloc in PLT','1.0',NULL);
INSERT INTO `ArchDE` VALUES (22,1,31,'For debugging; unspecified','1.0',NULL);
INSERT INTO `ArchDE` VALUES (23,1,31,'Reloc might modify .text','1.0',NULL);
INSERT INTO `ArchDE` VALUES (24,1,31,'Address of PLT relocs','1.0',NULL);
INSERT INTO `ArchDE` VALUES (25,1,31,'Process relocations of object','1.0',NULL);
INSERT INTO `ArchDE` VALUES (26,1,10,'The address of an array of pointers to initialization functions.','1.0',NULL);
INSERT INTO `ArchDE` VALUES (27,1,10,'The address of an array of pointers to termination functions.','1.0',NULL);
INSERT INTO `ArchDE` VALUES (28,1,10,'Size in bytes of DT_INIT_ARRAY','1.0',NULL);
INSERT INTO `ArchDE` VALUES (29,1,10,'Size in bytes of DT_FINI_ARRAY','1.0',NULL);
INSERT INTO `ArchDE` VALUES (30,1,10,'Number of dynamic entry tags defined (excepting reserved ranges).','1.0',NULL);
INSERT INTO `ArchDE` VALUES (31,1,10,'Values from DT_LOOS through DT_HIOS are reserved for definition by specific operating systems.','1.0',NULL);
INSERT INTO `ArchDE` VALUES (32,1,10,'Values from DT_LOOS through DT_HIOS are reserved for definition by specific operating systems.','1.0',NULL);
INSERT INTO `ArchDE` VALUES (33,1,31,'Start of processor-specific','1.0',NULL);
INSERT INTO `ArchDE` VALUES (34,1,31,'End of processor-specific','1.0',NULL);
INSERT INTO `ArchDE` VALUES (35,1,10,'Entries which fall between DT_VALRNGHI & DT_VALRNGLO use the Dyn.d_un.d_val field of the Elf*_Dyn structure.','1.0',NULL);
INSERT INTO `ArchDE` VALUES (36,1,10,'Flags for DT_* entries, effecting the following DT_* entry','1.3',NULL);
INSERT INTO `ArchDE` VALUES (37,1,10,'Size of syminfo table (in bytes)','1.0',NULL);
INSERT INTO `ArchDE` VALUES (38,1,10,'Entry size of syminfo','1.0',NULL);
INSERT INTO `ArchDE` VALUES (39,1,10,'Entries which fall between DT_VALRNGHI & DT_VALRNGLO use the Dyn.d_un.d_val field of the Elf*_Dyn structure.','1.0',NULL);
INSERT INTO `ArchDE` VALUES (40,1,10,'Values from DT_ADDRRNGLO through DT_ADDRRNGHI are reserved for definition by an archLSB.','1.0',NULL);
INSERT INTO `ArchDE` VALUES (41,1,10,'Address of the Syminfo table.','1.0',NULL);
INSERT INTO `ArchDE` VALUES (42,1,10,'Address of the table provided by the .gnu.version section.','1.0',NULL);
INSERT INTO `ArchDE` VALUES (43,1,10,'State flags, see DF_1_* constants in system headers for possible values','1.3','2.0');
INSERT INTO `ArchDE` VALUES (44,1,10,'Address of version definition table','1.0',NULL);
INSERT INTO `ArchDE` VALUES (45,1,10,'Number of version definitions','1.0',NULL);
INSERT INTO `ArchDE` VALUES (46,1,10,'Address of table with needed versions','1.0',NULL);
INSERT INTO `ArchDE` VALUES (47,1,10,'Number of needed versions','1.0',NULL);
INSERT INTO `ArchDE` VALUES (48,1,10,'Shared object to load before self','1.0',NULL);
INSERT INTO `ArchDE` VALUES (49,1,10,'Shared object to get values from','1.0',NULL);
INSERT INTO `ArchDE` VALUES (50,1,10,'All Elf32_Rel R_*_RELATIVE relocations have been placed into a single block and this entry specifies the number of entries in that block. This permits ld.so.1 to streamline the processing of RELATIVE relocations.','1.2',NULL);
INSERT INTO `ArchDE` VALUES (51,1,10,'Values from DT_ADDRRNGLO through DT_ADDRRNGHI are reserved for definition by an archLSB.','1.2',NULL);
INSERT INTO `ArchDE` VALUES (4,3,58,'This entry\'s d_ptr member gives the address of the first byte in the procedure linkage table','1.3',NULL);
INSERT INTO `ArchDE` VALUES (24,9,68,'This entry is associated with a table of relocation entries for the procedure linkage table. This entry is mandatory both for executable and shared object files','2.0',NULL);
INSERT INTO `ArchDE` VALUES (4,9,68,'This entry\'s d_ptr member gives the address of the first byte in the procedure linkage table','2.0',NULL);
INSERT INTO `ArchDE` VALUES (55,3,10,'The number of relative relocations in .rela.dyn','1.3',NULL);
INSERT INTO `ArchDE` VALUES (4,10,74,'This entry\'s d_ptr member gives the address of the first byte in the procedure linkage table','1.3',NULL);
INSERT INTO `ArchDE` VALUES (4,12,78,'This entry\'s d_ptr member gives the address of the first byte in the procedure linkage table','1.3',NULL);
INSERT INTO `ArchDE` VALUES (24,10,74,'This entry is associated with a table of relocation entries for the procedure linkage table. This entry is mandatory both for executable and shared object files','1.3',NULL);
INSERT INTO `ArchDE` VALUES (24,12,78,'This entry is associated with a table of relocation entries for the procedure linkage table. This entry is mandatory both for executable and shared object files','1.3',NULL);
INSERT INTO `ArchDE` VALUES (4,6,64,'This entry\'s d_ptr member gives the address of the first byte in the procedure linkage table','2.0',NULL);
INSERT INTO `ArchDE` VALUES (24,6,64,'This entry is associated with a table of relocation entries for the procedure linkage table. This entry is mandatory both for executable and shared object files','2.0',NULL);
INSERT INTO `ArchDE` VALUES (55,6,10,'The number of relative relocations in .rela.dyn','2.0',NULL);
INSERT INTO `ArchDE` VALUES (55,9,10,'The number of relative relocations in .rela.dyn','2.0',NULL);
INSERT INTO `ArchDE` VALUES (24,3,68,'This entry is associated with a table of relocation entries for the procedure linkage table. This entry is mandatory both for executable and shared object files','1.3',NULL);
INSERT INTO `ArchDE` VALUES (4,3,74,'This entry\'s d_ptr member gives the address of the first byte in the procedure linkage table','1.3',NULL);
INSERT INTO `ArchDE` VALUES (55,10,10,'The number of relative relocations in .rela.dyn','1.3',NULL);
INSERT INTO `ArchDE` VALUES (55,12,10,'The number of relative relocations in .rela.dyn','1.3',NULL);
INSERT INTO `ArchDE` VALUES (4,11,80,'This entry\'s d_ptr member gives the address of the first byte in the procedure linkage table','2.0',NULL);
INSERT INTO `ArchDE` VALUES (24,11,80,'This entry is associated with a table of relocation entries for the procedure linkage table. This entry is mandatory both for executable and shared object files','2.0',NULL);
INSERT INTO `ArchDE` VALUES (55,11,80,'The number of relative relocations in .rela.dyn','2.0',NULL);
INSERT INTO `ArchDE` VALUES (73,1,10,'null-terminated library search path string','3.0',NULL);
INSERT INTO `ArchDE` VALUES (43,1,10,'State flags, see DF_1_* constants in system headers for possible values','1.0','1.2');
INSERT INTO `ArchDE` VALUES (36,1,10,'Flags for DT_* entries, effecting the following DT_* entry','1.0','1.2');
